global:
  fqdn: "http://appflowy.mydomain.com"
  database:
    host: appflowy-postgres
    name: appflowy
    port: 5432
    username: appflowy
    adminUsername: postgres
  smtp:
    host: ""
    port: 587
    user: user
  secret:
    name: appflowy
    create: true
    postgres:
      adminPassword:
        key: postgresAdminPassword
        value: password
      gotrue:
        postgresPassword:
          key: gotruePostgresPassword
          value: password
        databaseUrl:
          key: gotrueDatabaseUrl
      appflowy:
        postgresPassword:
          key: postgresPassword
          value: password
        databaseUrl:
          key: appflowyDatabaseUrl
    gotrue:
      adminPassword:
        key: gotrueAdminPassword
        value: password
    oauth:
      googleClientSecret:
        key: oauthGoogleClientSecret
        value: ""
      discordClientSecret:
        key: oauthDiscordClientSecret
        value: ""
      githubClientSecret:
        key: oauthGithubClientSecret
        value: ""
      appleClientSecret:
        key: oauthAppleClientSecret
        value: ""
    jwt:
      secret:
        key: jwtSecret
        value: hello456
    smtp:
      password:
        key: smtpPassword
        value: password
    s3:
      secret:
        key: s3Secret
        value: "password"

nameOverride: ""
fullnameOverride: appflowy

postgresql:
  enabled: true
  fullnameOverride: appflowy-postgres
  image:
    repository: zmegalodon/appflowy-postgres
    tag: 0.1.0
  auth:
    username: appflowy
    database: appflowy
    password: password
    postgresPassword: password
  primary:
    persistence:
      enabled: true
      size: 1Gi

appflowy-gotrue:
  enabled: true
  fullnameOverride: appflowy-gotrue
  mailer:
    enabled: true
    autoConfirm: false
  extraEnv: []

appflowy-cloud:
  enabled: true
  fullnameOverride: appflowy-cloud
  redis:
    uri: "redis://appflowy-redis-headless:6379"
  gotrue:
    baseUrl: "http://appflowy-gotrue"
    adminEmail: "admin@example.com"
  s3:
    createBucket: "true"
    useMinio: "true"
    minioUrl: "http://appflowy-minio:9000"
    accessKey: "minioadmin"
  accessControl:
    enabled: true
  ingress:
    enabled: true

redis:
  enabled: true
  auth:
    enabled: false
  architecture: standalone
  fullnameOverride: appflowy-redis
  master:
    persistence:
      enabled: false

minio:
  enabled: true
  auth:
    rootPassword: password
    rootUser: minioadmin
  persistence:
    size: 1Gi
  resources:
    limits:
      memory: 256Mi
    requests:
      cpu: 10m
      memory: 256Mi

setupJob:
  enabled: true
  postgresConnectTimeout: 60
  backoffLimit: 5
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
